{
  "name": "express-jsonstream",
  "description": "Simple middleware for JSON streaming in Express",
  "version": "0.0.3",
  "author": {
    "name": "Simon Murtha-Smith",
    "email": "simon@murtha-smith.com"
  },
  "keywords": [
    "express",
    "json",
    "streaming"
  ],
  "main": "index.js",
  "repository": {
    "type": "git",
    "url": "http://github.com/smurthas/express-jsonstreaming.git"
  },
  "dependencies": {
    "json-stream-splitter": "0.0.3"
  },
  "engines": {
    "node": ">=0.4.6 <0.7.0"
  },
  "readme": "Simple middleware for JSON streaming in Express. Stringifys and sends object delimited by ```\\n```'s with the ```Content-Type : application/jsonstream``` header\n\n    var jsonStream = require('express-jsonstream');\n    var express = require('express');\n    var app = express.createServer(jsonStream());\n\n    app.get('/stream-yo', function(req, res) {\n      res.jsonStream({small:'world'});\n      res.jsonStream({after:'all'});\n      res.end();\n    });\n\n    app.post('/stream-yo', function(req, res) {\n      req.jsonStream()\n      .on('object', console.log)\n      .on('response', function(response) {\n        if(response.statusCode !== 200) console.error('got non 200 response', response);\n      })\n      .on('error', console.error).on('end', function() {\n        res.send('ok');\n      });\n    });\n\n    app.listen(8553);\n    console.log('listening on', 8553);\n\nYou can run the example with:\n\n    node example\n\na GET to /stream-yo:\n\n    curl \"http://localhost:8553/stream-yo\" -G -v\n    * About to connect() to localhost port 8553 (#0)\n    *   Trying 127.0.0.1... connected\n    * Connected to localhost (127.0.0.1) port 8553 (#0)\n    > GET / HTTP/1.1\n    > User-Agent: curl/7.21.4 (universal-apple-darwin11.0) libcurl/7.21.4 OpenSSL/0.9.8r zlib/1.2.5\n    > Host: localhost:8553\n    > Accept: */*\n    >\n    < HTTP/1.1 200 OK\n    < X-Powered-By: Express\n    < content-type: application/jsonstream\n    < Connection: keep-alive\n    < Transfer-Encoding: chunked\n    <\n    {\"small\":\"world\"}\n    {\"after\":\"all\"}\n    * Connection #0 to host localhost left intact\n    * Closing connection #0\n\na POST to /stream-yo\n\n    curl \"http://localhost:8553/stream-yo\" -d \"{\\\"balh\\\":\\\"asdasd\\\"}\"$'\\n' -H \"content-type: application/jsonstream\" -v\n    * About to connect() to localhost port 8553 (#0)\n    *   Trying 127.0.0.1... connected\n    * Connected to localhost (127.0.0.1) port 8553 (#0)\n    > POST /stream-yo HTTP/1.1\n    > User-Agent: curl/7.21.4 (universal-apple-darwin11.0) libcurl/7.21.4 OpenSSL/0.9.8r zlib/1.2.5\n    > Host: localhost:8553\n    > Accept: */*\n    > content-type: application/jsonstream\n    > Content-Length: 18\n    >\n    < HTTP/1.1 200 OK\n    < X-Powered-By: Express\n    < Content-Type: text/html; charset=utf-8\n    < Content-Length: 2\n    < Connection: keep-alive\n    <\n    * Connection #0 to host localhost left intact\n    * Closing connection #0\n    ok\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/smurthas/express-jsonstreaming/issues"
  },
  "homepage": "https://github.com/smurthas/express-jsonstreaming",
  "_id": "express-jsonstream@0.0.3",
  "dist": {
    "shasum": "fa03006b64d286663414fa632205a7f0451ff61d"
  },
  "_from": "express-jsonstream@",
  "_resolved": "https://registry.npmjs.org/express-jsonstream/-/express-jsonstream-0.0.3.tgz"
}
